/* ---- CLEANING ---- */

/* Creating new "summary_table" data set and getting rid of unnecessary columns */
/* converting rideable_type to bike_type and member_casual to customer_type */

CREATE TABLE
  VisualizationTables.summary_table AS
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.jan_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.feb_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.mar_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.apr_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.may_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.jun_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.jul_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.aug_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.sept_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.oct_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.nov_2021`
UNION ALL
SELECT
  * EXCEPT (start_station_id,
    end_station_id,
    start_lat,
    start_lng,
    end_lat,
    end_lng,
    rideable_type,
    member_casual),
  rideable_type AS bike_type,
  member_casual AS costumer_type
FROM
  `capstone-403818.Original_Tables.dec_2021`
ORDER BY
  started_at; 
  
  
/* create "ride_duration" column using the DATETIME_DIFF function from "ended_at" and "started_at" columns */
/* create "day_of_week" column using the EXTRACT function and replace numbers with correlating days */
/* create "ride_month" column and replace numbers with correlating month names */


WITH
  agg_table AS(SELECT
    * EXCEPT (day_of_week),
    DATETIME_DIFF(ended_at, started_at, minute) AS ride_duration,
    EXTRACT(month
    FROM
      started_at) AS ride_month,
    CASE
      WHEN day_of_week = 1 THEN "Sunday"
      WHEN day_of_week = 2 THEN "Monday"
      WHEN day_of_week = 3 THEN "Tuesday"
      WHEN day_of_week = 4 THEN "Wednesday"
      WHEN day_of_week = 5 THEN "Thursday"
      WHEN day_of_week = 6 THEN "Friday"
    ELSE
    "Saturday"
  END
    AS day_of_week
  FROM
    `capstone-403818.months_2021.alldata`),

  month_name as (select
    * EXCEPT (ride_month),
    CASE
      WHEN ride_month = 1 THEN "Jan"
      WHEN ride_month = 2 THEN "Feb"
      WHEN ride_month = 3 THEN "Mar"
      WHEN ride_month = 4 THEN "Apr"
      WHEN ride_month = 5 THEN "May"
      WHEN ride_month = 6 THEN "Jun"
      WHEN ride_month = 7 THEN "Jul"
      WHEN ride_month = 8 THEN "Aug"
      WHEN ride_month = 9 THEN "Sept"
      WHEN ride_month = 10 THEN "Oct"
      WHEN ride_month = 11 THEN "Nov"
      WHEN ride_month = 12 THEN "Dec"
  END
    AS month_name
  FROM
    `capstone-403818.VisualizationTables.summary_table`),


  /* using the TRIM function to remove nulls, test rides, and trips greater than one day from data set */

  trim_station AS (SELECT
    *EXCEPT (start_station_name,
      end_station_name),
    trim (start_station_name) AS start_station_name,
    trim (end_station_name) AS end_station_name
  FROM
    agg_table
  WHERE
    ride_id IS NOT NULL),

  remove_test_rides as (
    select
    *
    from trim_station
    where start_station_name NOT LIKE '%TEST%'
    and start_station_name NOT LIKE '%TEMP%' 
    AND start_station_name NOT LIKE '%CHECKING%'
    AND start_station_name NOT LIKE '%*%'
    AND end_station_name NOT LIKE '%TEST%'
    AND end_station_name NOT LIKE '%TEMP%'
    AND end_station_name NOT LIKE '%CHECKING%'
    AND end_station_name NOT LIKE '%*%'
    AND ride_duration >1
  )
select *
from agg_table
where
start_station_name is not null
and end_station_name is not null;
